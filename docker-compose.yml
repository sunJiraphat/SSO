version: '3.4'

networks: 
  kong-net: 
    driver: bridge
  keycloak-net: 
    driver: bridge

volumes:
  kong-datastore:
  postgres_data:
      driver: local

services:
  kong-database:
    image: postgres:9.6
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    # network_mode: host
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB:       kong
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kongpass
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  kong-migration:
    image: kong:oidc-acl
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_DATABASE: postgres
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: kongpass
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    image: kong:oidc-acl
    build: ./docker/kong
    depends_on:
      - kong-database
    volumes:
      - ./oidc/:/usr/local/share/lua/5.1/kong/plugins/oidc/
      - ./acl/:/usr/local/share/lua/5.1/kong/plugins/oidc-acl/
    networks:
      - kong-net
    # network_mode: host
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8543:8443" # Listener  (SSL)
      - "8544:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      #KONG_PG_HOST:          127.0.0.1
      KONG_PG_HOST:          kong-database
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      kong
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          oidc,bundled,oidc-acl
  
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    container_name: konga
    environment:
      - NODE_ENV=production

  keycloak-database:
      image: postgres:11
      volumes:
        - postgres_data:/var/lib/postgresql/data
      # network_mode: host
      networks:
        - keycloak-net
      ports:
        - "5433:5432"
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
      
  
  keycloak:
      image: quay.io/keycloak/keycloak:legacy
      # network_mode: host
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: keycloak-database
        DB_PORT: 5432
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: 1234
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8080:8080
        - 8443:8443
      depends_on:
        - keycloak-database
      networks:
        - keycloak-net
    
  nginx:
    image: nginx:latest
    container_name: http-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

